---
layout: post
title:  마리오카트 #1
date:   2021-09-27 11:05:48 +0900
categories: WIN API
---

# Win api로 snes 마리오카트 만들어보기
api로 무얼 만들까 고민하다 마리오 카트를 만들어 보기로 결정했다. 처음에 플레이 동영상을 봐보니 생각 이상으로 어려울 것 같아 다른걸 해볼까 하다가 인터넷에 나름 참고자료도 있길래 한번 도전하게 됬는데 그 과정이 쉽지는 않았다..

# 프러스텀 구현
Mode7를 구현하기 위해서 프러스텀을 만들고 그 프러스텀을 순회하면서 샘플링을 해야하는데 따라서 프러스텀이 원하는데로 잘 만들어지는지 확인을 해봤고 결과는 아래와 같았다.

![Imgur](https://imgur.com/wWZhnaa.gif)

이제 이 프러스텀으로 샘플링을 하면 Mode7 효과가 나타날 것이라 생각하고 구현해봤지만..

# 속도문제
잘 감이 안 와서 일단 화면에 출력하고 여기서 값을 샘플링하는 방법으로 일단은 구현해봤다. 결과는 다음과 같았다.

![Imgur](https://imgur.com/QqpTCJT.gif)

프레임이 답이 안 나온다.. 혹시나 화면에 출력하고 여기서 샘플링을 해서 그런가 싶어서 코드의 구조를 바꿔서 다시 만들어봤다. 

# 똑같은 결과
이번에는 화면에 그리고 거기서 샘플링을 하는게 아니라 그리기전에 색깔을 샘플링해서 그 색깔을 기반으로 새로운 텍스쳐를 만들어 출력하려했지만 잘 안되어서 SetPixel, GetPixel로 해당 텍스쳐의 색깔을 받아와 화면에 픽셀 값을 정하는 방식으로 해봤지만 결과는 별로 달라지지 않았다.

![Imgur](https://imgur.com/n88HlLa.gif)

인터넷에서 자료를 조사해본 결과 문제는 SetPixel, GetPixel에 있었다. 좌표를 건내주면 해당 색깔을 가져오고 설정해주는 방식이여서 사용하기 간편하다는 생각으로 이용했지만 속도의 문제가 심각했다.

# 약간의 최적화
지형이나 하늘의 텍스쳐는 한번 로딩되면 사라지지 않기에 로딩후에 픽셀의 색깔값을 저장할 배열을 만들어 초기에 초기화하고 여기서 값을 가져오는 방법으로 바꿨다. 여기서 GetDIBits를 사용해봤지만 색깔이 이상해지길래 결국 다시 초기에 좀 느리지만 GetPixel로 색깔값을 가져오는 방식을 선택했다. 그 이후에는 빠르게 색깔값을 가져와 배열에 집어넣고 그 값을 기준으로 새로운 비트맵을 만드는 방식을 찾던 도중에 [여기의 코드](https://stackoverflow.com/questions/56226748/how-can-i-display-a-bitmap-array-with-color-values-in-a-window-using-window-ap)를 참조하여 구현했다.

# 결과

![Imgur](https://imgur.com/yqqj4PP.gif)

비록 색깔이 이상해지는 문제는 아직 있지만 프레임 문제가 많이 나아졌다.. 이제 색이 이상해지는 문제만 고치면 다음 단계로 넘어갈 수 있을듯 하다.