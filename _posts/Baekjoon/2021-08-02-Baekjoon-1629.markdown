---
layout: post
title: 곱셈
date: 2021-08-02 11:09:06 +0900
categories: Baekjoon
---


## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/1629)
# 곱셈

# 문제
> 자연수 A를 B번 곱한 수를 알고 싶다. 단 구하려는 수가 매우 커질 수 있으므로 이를 C로 나눈 나머지를 구하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 모두 2,147,483,647 이하의 자연수이다.

# 출력
> 첫째 줄에 A를 B번 곱한 수를 C로 나눈 나머지를 출력한다.

# 풀이
재귀를 이용해서 풀 수 있는 문제였다. 먼저 기저 케이스를 준비하고 이는 B가 0이 될때 1를 반환하는 것으로 한다. 무슨 수든 0승을 한것은 1이니까 그리고 B를 2로 나눠서 자기 자신을 호출한다. 호출 결과를 받아서 두번 곱하면 제곱의 결과가 될 것이고 이를 C로 나머지 연산을 한다. 여기서 만약 B가 짝수였다면 이 값을 그대로 반환 만약 홀수라면 2^3의 값은 2 * 2^2의 값과 동일하다 따라서 A * 제곱값과 C로 나머지를 한 것을 반환한다.

# 코드
```c++
#include <iostream>

using namespace std;

long long recursivePow(long long a, long long b, long long c)
{
	if (b == 0)
		return 1;

	long long n = recursivePow(a, b / 2, c);
	long long ret = n * n % c;

	if (b % 2 == 0)
		return ret;
	else
		return a * ret % c;
}

int main()
{
	long long A, B, C;

	cin >> A >> B >> C;

	cout << recursivePow(A, B, C) << "\n";

	return 0;
}
```