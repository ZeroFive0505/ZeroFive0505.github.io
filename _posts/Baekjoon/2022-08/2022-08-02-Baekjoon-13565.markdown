---
layout: post
title: 침투
date: 2022-08-02 09:53:29 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/13565)
# 침투

# 문제
> 인제대학교 생화학연구실에 재직중인 석교수는 전류가 침투(percolate) 할 수 있는 섬유 물질을 개발하고 있다. 이 섬유 물질은 2차원 M × N 격자로 표현될 수 있다. 편의상 2차원 격자의 위쪽을 바깥쪽(outer side), 아래쪽을 안쪽(inner side)라고 생각하기로 한다. 또한 각 격자는 검은색 아니면 흰색인데, 검은색은 전류를 차단하는 물질임을 뜻하고 흰색은 전류가 통할 수 있는 물질임을 뜻한다. 전류는 섬유 물질의 가장 바깥쪽 흰색 격자들에 공급되고, 이후에는 상하좌우로 인접한 흰색 격자들로 전달될 수 있다.
김 교수가 개발한 섬유 물질을 나타내는 정보가 2차원 격자 형태로 주어질 때, 바깥쪽에서 흘려 준 전류가 안쪽까지 침투될 수 있는지 아닌지를 판단하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에는 격자의 크기를 나타내는  M (2 ≤ M ≤ 1,000) 과 N (2 ≤ N ≤ 1,000) 이 주어진다. M줄에 걸쳐서, N개의 0 또는 1 이 공백 없이 주어진다. 0은 전류가 잘 통하는 흰색, 1은 전류가 통하지 않는 검은색 격자임을 뜻한다.

# 출력
> 바깥에서 흘려준 전류가 안쪽까지 잘 전달되면 YES를 출력한다.
그렇지 않으면 NO를 출력한다.

# 풀이
BFS, DFS를 이용하여 첫번째 행에 있는 모든 열에서 탐색을 시도해서 만약 끝 행까지 도달할 수 있는지를 체크한다.

# 코드
```c++
#include <iostream>
#include <string>
#include <stack>

using namespace std;

const int MAX = 1001;

int arr[MAX][MAX] = {};
bool visited[MAX][MAX] = {};

int M, N;

struct sDelta
{
	int r;
	int c;
}Delta[] = {
	{1, 0},
	{-1, 0},
	{0, 1},
	{0, -1}
};

bool DFS(int r, int c)
{
	if (arr[r][c] == 1)
		return false;

	visited[r][c] = true;
	stack<pair<int, int>> st;

	st.push({ r, c });

	while (!st.empty())
	{
		pair<int, int> t = st.top();
		st.pop();

		if (t.first == M - 1)
			return true;

		for (int i = 0; i < 4; i++)
		{
			int nr = t.first + Delta[i].r;
			int nc = t.second + Delta[i].c;

			if (nr < 0 || nc < 0 || nr >= M || nc >= N)
				continue;

			if (!visited[nr][nc] && arr[nr][nc] == 0)
			{
				visited[nr][nc] = true;
				st.push({ nr, nc });
			}
		}
	}

	return false;
}

int main()
{
	cin >> M >> N;

	for (int i = 0; i < M; i++)
	{
		string s;
		cin >> s;
		for (int j = 0; j < N; j++)
		{
			arr[i][j] = s[j] - '0';
		}
	}

	bool found = false;

	for (int i = 0; i < N; i++)
	{
		if (DFS(0, i))
		{
			found = true;
			break;
		}
	}

	if (found)
		cout << "YES\n";
	else
		cout << "NO\n";

	return 0;
}
```