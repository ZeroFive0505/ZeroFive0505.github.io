---
layout: post
title: 뒤집기
date: 2022-08-04 10:33:45 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/1439)
# 뒤집기

# 문제
> 다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다. 다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다. 다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.
예를 들어 S=0001100 일 때,
> 1. 전체를 뒤집으면 1110011이 된다.
> 2. 4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.

>  하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.
문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

# 입력
> 첫째 줄에 문자열 S가 주어진다. S의 길이는 100만보다 작다.

# 출력
> 첫째 줄에 다솜이가 해야하는 행동의 최소 횟수를 출력한다.

# 풀이
연속된 문자열의 그룹 갯수를 센 다음 그중에서 가장 최소치가 되는 값을 출력하는 방식으로 정답 처리를 받을 수 있었다.

# 코드
```c++
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

int arr[2] = {};

int main()
{
	string s;

	cin >> s;

	char c = ' ';
	int cnt = 0;
	for (int i = 0; i < s.size(); i++)
	{
		if (c == ' ')
			c = s[i];
		else
		{
            // 문자가 달라지는 순간 그룹의 끝
			if (c != s[i])
			{
                // 카운트를 늘려준다.
				if (c == '0')
					arr[0]++;
				else
					arr[1]++;

                // 새로운 문자 등록
				c = s[i];
			}
		}
	}

    // 문자열 순회가 끝났지만 마지막 문자열의 경우 아직 처리가 안됨 따라서 여기서 한번 늘려준다.
	if (c == '0')
		arr[0]++;
	else
		arr[1]++;

    // 두 그룹 중 최소치가 되는 그룹 출력
	cout << min(arr[0], arr[1]) << "\n";


	return 0;
}
```