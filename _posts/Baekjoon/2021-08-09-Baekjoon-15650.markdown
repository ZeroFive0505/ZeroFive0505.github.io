---
layout: post
title: N과 M(2)
date:  2021-08-09 14:13:53 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/15650)
# N과 M(2)

# 문제
> 자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

> - 1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
> - 고른 수열은 오름차순이어야 한다.

# 입력
> 첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

# 출력
> 한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다. 수열은 사전 순으로 증가하는 순서로 출력해야 한다.

# 풀이
이번에는 순서를 나타내는 값도 같이 함수의 인자로 전달해서 풀면 된다.

# 코드
```c++
#include <iostream>

using namespace std;

int N, M;

const int SIZE = 10;

bool used[SIZE];

int arr[SIZE];

void recur(int depth, int i)
{
	if (depth == M)
	{
		for (int i = 0; i < M; i++)
			cout << arr[i] << " ";
		cout << "\n";
		return;
	}


    // i번 숫자에서 부터 N까지 순회하면서 쓰지않은 숫자를 쓴다.
	for (int j = i; j <= N; j++)
	{
		if (!used[j])
		{
			used[j] = true;
			arr[depth] = j;
			recur(depth + 1, j);
			used[j] = false;
		}
	}
}

int main()
{
	cin >> N >> M;

    // 0번 깊이서 1번 숫자를 이용한다.
	recur(0, 1);

	return 0;
}
```

# next_permutaion을 이용해서 풀기
```c++
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int main()
{

	int N, M;

	cin >> N >> M;

	vector<int> v;
	vector<int> perm(N, 1);
	for (int i = 1; i <= N; i++)
		v.push_back(i);
    
    // M개의 숫자를 고른다.
	for (int i = 0; i < M; i++)
		perm[i] = 0;

	do
	{   
		for (int i = 0; i < perm.size(); i++)
		{
            // 고른 숫자를 출력한다.
			if (perm[i] == 0)
				cout << v[i] << " ";
		}

		cout << "\n";

	} while (next_permutation(perm.begin(), perm.end()));


	return 0;
}
```