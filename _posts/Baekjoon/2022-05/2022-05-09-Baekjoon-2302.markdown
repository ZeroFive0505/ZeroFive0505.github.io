---
layout: post
title: 극장 좌석
date: 2022-05-09 08:09:19 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/2302)
# 극장 좌석

# 문제
> 어떤 극장의 좌석은 한 줄로 되어 있으며 왼쪽부터 차례대로 1번부터 N번까지 번호가 매겨져 있다. 공연을 보러 온 사람들은 자기의 입장권에 표시되어 있는 좌석에 앉아야 한다. 예를 들어서, 입장권에 5번이 쓰여 있으면 5번 좌석에 앉아야 한다. 단, 자기의 바로 왼쪽 좌석 또는 바로 오른쪽 좌석으로는 자리를 옮길 수 있다. 예를 들어서, 7번 입장권을 가진 사람은 7번 좌석은 물론이고, 6번 좌석이나 8번 좌석에도 앉을 수 있다. 그러나 5번 좌석이나 9번 좌석에는 앉을 수 없다.
그런데 이 극장에는 “VIP 회원”들이 있다. 이 사람들은 반드시 자기 좌석에만 앉아야 하며 옆 좌석으로 자리를 옮길 수 없다.
오늘 공연은 입장권이 매진되어 1번 좌석부터 N번 좌석까지 모든 좌석이 다 팔렸다. VIP 회원들의 좌석 번호들이 주어졌을 때, 사람들이 좌석에 앉는 서로 다른 방법의 가짓수를 구하는 프로그램을 작성하시오.
예를 들어서, 그림과 같이 좌석이 9개이고, 4번 좌석과 7번 좌석이 VIP석인 경우에 <123456789>는 물론 가능한 배치이다. 또한 <213465789> 와 <132465798> 도 가능한 배치이다. 그러나 <312456789> 와 <123546789> 는 허용되지 않는 배치 방법이다.

> ![Img](https://upload.acmicpc.net/80caa675-30d4-44ec-8100-01f8eac2a3e3/-/preview/)

# 입력
> 첫째 줄에는 좌석의 개수 N이 입력된다. N은 1 이상 40 이하이다. 둘째 줄에는 고정석의 개수 M이 입력된다. M은 0 이상 N 이하이다. 다음 M 개의 줄에는 고정석의 번호가 작은 수부터 큰 수의 순서로 한 줄에 하나씩 입력된다.

# 출력
> 주어진 조건을 만족하면서 사람들이 좌석에 앉을 수 있는 방법의 가짓수를 출력한다. 방법의 가짓수는 2,000,000,000을 넘지 않는다. (2,000,000,000 < 2^31-1)

# 풀이
좌석이 N개 있을경우 가능한 좌석의 수는 N - 1 + N - 2의 합이라는 것은 알아냈지만 VIP라는 고정된 좌석이 있는 경우는 어떻게 해야 할지 감이 오질 않아서 [이 곳](https://yabmoons.tistory.com/550)을 참조하여 풀 수 있었다.

# 코드
```c++
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX = 41;

int N, M;

int tab[MAX] = {};

int ans = 1;

vector<int> v;

int main()
{
	cin >> N >> M;

	tab[0] = 1;
	tab[1] = 1;
	tab[2] = 2;

	for (int i = 3; i <= N; i++)
	{
		tab[i] = tab[i - 1] + tab[i - 2];
	}

	for (int i = 0; i < M; i++)
	{
		int seat;

		cin >> seat;

		v.push_back(seat);
	}

	int s = 0;

	for (const int i : v)
	{
        // 1을 빼서 그 이전 자리까지의 경우의 수를 구한다. 현재 i는 VIP의 자리이니 경우의 수에서 제외해야 하기 때문
		ans *= tab[i - s - 1];
		s = i;
	}

	ans *= tab[N - s];

	cout << ans << "\n";

	return 0;
}
```