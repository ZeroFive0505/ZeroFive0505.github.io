---
layout: post
title: 암호 코드
date: 2022-05-14 09:41:53 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/2011)
# 암호 코드

# 문제
> 상근이와 선영이가 다른 사람들이 남매간의 대화를 듣는 것을 방지하기 위해서 대화를 서로 암호화 하기로 했다. 그래서 다음과 같은 대화를 했다.
> - 상근: 그냥 간단히 암호화 하자. A를 1이라고 하고, B는 2로, 그리고 Z는 26으로 하는거야.
> - 선영: 그럼 안돼. 만약, "BEAN"을 암호화하면 25114가 나오는데, 이걸 다시 글자로 바꾸는 방법은 여러 가지가 있어.
>- 상근: 그렇네. 25114를 다시 영어로 바꾸면, "BEAAD", "YAAD", "YAN", "YKD", "BEKD", "BEAN" 총 6가지가 나오는데, BEAN이 맞는 단어라는건 쉽게 알수 있잖아?
> - 선영: 예가 적절하지 않았네 ㅠㅠ 만약 내가 500자리 글자를 암호화 했다고 해봐. 그 때는 나올 수 있는 해석이 정말 많은데, 그걸 언제 다해봐?
> - 상근: 얼마나 많은데?
> - 선영: 구해보자!
> 어떤 암호가 주어졌을 때, 그 암호의 해석이 몇 가지가 나올 수 있는지 구하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 5000자리 이하의 암호가 주어진다. 암호는 숫자로 이루어져 있다.

# 출력
> 나올 수 있는 해석의 가짓수를 구하시오. 정답이 매우 클 수 있으므로, 1000000으로 나눈 나머지를 출력한다.
암호가 잘못되어 암호를 해석할 수 없는 경우에는 0을 출력한다.

# 풀이
[이 곳](https://yabmoons.tistory.com/163)의 풀이법을 참조하여 풀 수 있었다. 숫자가 2개 이상이면서 알파벳으로 치환했을시 10이상이되면 다른 처리를 하는것이 핵심 포인트였다.

# 코드
```c++
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

const int MOD = 1000000;

int tab[5001] = {};

int arr[5001] = {};

int main()
{
	string s;

	cin >> s;

	int len = s.length();

	for (int i = 0; i < len; i++)
	{
		arr[i + 1] = s[i] - '0';
	}

	tab[0] = 1;

	for (int i = 1; i <= len; i++)
	{
        // 그 전 값에 누적
		if (arr[i] >= 1 && arr[i] <= 9)
			tab[i] = (tab[i - 1] + tab[i]) % MOD;

		if (i == 1)
			continue;

        // 만약 10 이상의 수가 나온다면
		int t = arr[i] + arr[i - 1] * 10;

        // 알파벳의 범위 이내라면 다시 누적한다.
		if (t >= 10 && t <= 26)
			tab[i] = (tab[i - 2] + tab[i]) % MOD;
	}

	cout << tab[len] << "\n";

	return 0;
}
```