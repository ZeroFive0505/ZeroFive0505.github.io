---
layout: post
title: 가장 큰 증가 부분 수열
date: 2022-05-02 08:01:08 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/11055)
# 가장 큰 증가 부분 수열

# 문제
> 수열 A가 주어졌을 때, 그 수열의 증가 부분 수열 중에서 합이 가장 큰 것을 구하는 프로그램을 작성하시오.
예를 들어, 수열 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 인 경우에 합이 가장 큰 증가 부분 수열은 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 이고, 합은 113이다.

# 입력
> 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.
둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 출력
> 첫째 줄에 수열 A의 합이 가장 큰 증가 부분 수열의 합을 출력한다.

# 코드와 풀이
```c++
#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 1001;

const int INF = 987654321;

int arr[MAX] = {};
// N번째 부분수열의 최대 핪을 구할 배열
int tab[MAX] = {};
int N;

int ans = -INF;

int main()
{
	cin >> N;

	for (int i = 1; i <= N; i++)
	{
		cin >> arr[i];
	}

	for (int i = 1; i <= N; i++)
	{
        // i번째 부분수열의 최대의 합은 자기 자신
		tab[i] = arr[i];

		for (int j = 1; j <= N; j++)
		{
            // 만약 arr[i]가 arr[j]보다 크고
            // i까지 부분수열의 합이 j까지 부분수열의 합과 현재 수의 합보다 작다면 
			if (arr[j] < arr[i] && tab[i] < tab[j] + arr[i])
			{
                // 갱신한다.
				tab[i] = tab[j] + arr[i];
			}
		}
		ans = max(ans, tab[i]);
	}

	cout << ans << "\n";

	return 0;
}
```