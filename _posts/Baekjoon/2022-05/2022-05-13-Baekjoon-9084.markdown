---
layout: post
title: 동전
date: 2022-05-13 13:09:52 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/9084)
# 동전

# 문제
> 우리나라 화폐단위, 특히 동전에는 1원, 5원, 10원, 50원, 100원, 500원이 있다. 이 동전들로는 정수의 금액을 만들 수 있으며 그 방법도 여러 가지가 있을 수 있다. 예를 들어, 30원을 만들기 위해서는 1원짜리 30개 또는 10원짜리 2개와 5원짜리 2개 등의 방법이 가능하다.
동전의 종류가 주어질 때에 주어진 금액을 만드는 모든 방법을 세는 프로그램을 작성하시오.

# 입력
> 입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다. 각 테스트 케이스의 첫 번째 줄에는 동전의 가지 수 N(1 ≤ N ≤ 20)이 주어지고 두 번째 줄에는 N가지 동전의 각 금액이 오름차순으로 정렬되어 주어진다. 각 금액은 정수로서 1원부터 10000원까지 있을 수 있으며 공백으로 구분된다. 세 번째 줄에는 주어진 N가지 동전으로 만들어야 할 금액 M(1 ≤ M ≤ 10000)이 주어진다.
편의를 위해 방법의 수는 231 - 1 보다 작고, 같은 동전이 여러 번 주어지는 경우는 없다.

# 출력
> 각 테스트 케이스에 대해 입력으로 주어지는 N가지 동전으로 금액 M을 만드는 모든 방법의 수를 한 줄에 하나씩 출력한다.

# 풀이
반복문을 돌면서 해당 금액으로는 바로 주어진 금액을 만들 수 있으니 1을 누적한다. 그 이후에는 해당 금액에서부터 시작해서 바로 전 금액을 만드는 경우의 수를 누적해간다.

# 코드
```c++
#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 10001;

int N, M, T;

int tab[MAX] = {};

int arr[21] = {};

int main()
{
	cin >> T;

	while (T--)
	{
		cin >> N;

		for (int i = 1; i <= N; i++)
			cin >> arr[i];

		cin >> M;

        // 배열 초기화
		for (int i = 1; i <= M; i++)
			tab[i] = 0;

		for (int i = 1; i <= N; i++)
		{
            // 현재 금액을 만들 수 있는 경우의 수 누적
			tab[arr[i]] += 1;
            // arr[i]원부터 시작해서 목표 금액인 M원까지 반복한다.
			for (int j = arr[i]; j <= M; j++)
			{
                // arr[j]원을 만드는 경우의 수는 현재 경우의 수에서 이전 금액으로 만들었던 경우의 수를 누적한다.
				tab[j] += tab[j - arr[i]];
			}
		}

		cout << tab[M] << "\n";
	}

	return 0;
}
```