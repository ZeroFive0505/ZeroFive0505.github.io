---
layout: post
title: 구간 합 구하기 5
date: 2022-05-16 11:04:18 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/11660)
# 구간 합 구하기 5

# 문제
> N×N개의 수가 N×N 크기의 표에 채워져 있다. (x1, y1)부터 (x2, y2)까지 합을 구하는 프로그램을 작성하시오. (x, y)는 x행 y열을 의미한다.
예를 들어, N = 4이고, 표가 아래와 같이 채워져 있는 경우를 살펴보자.
>   1	2	3	4
>   2	3	4	5
>   3	4	5	6
>   4	5	6	7

> 여기서 (2, 2)부터 (3, 4)까지 합을 구하면 3+4+5+4+5+6 = 27이고, (4, 4)부터 (4, 4)까지 합을 구하면 7이다.
표에 채워져 있는 수와 합을 구하는 연산이 주어졌을 때, 이를 처리하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 표의 크기 N과 합을 구해야 하는 횟수 M이 주어진다. (1 ≤ N ≤ 1024, 1 ≤ M ≤ 100,000) 둘째 줄부터 N개의 줄에는 표에 채워져 있는 수가 1행부터 차례대로 주어진다. 다음 M개의 줄에는 네 개의 정수 x1, y1, x2, y2 가 주어지며, (x1, y1)부터 (x2, y2)의 합을 구해 출력해야 한다. 표에 채워져 있는 수는 1,000보다 작거나 같은 자연수이다. (x1 ≤ x2, y1 ≤ y2)

# 출력
> 총 M줄에 걸쳐 (x1, y1)부터 (x2, y2)까지 합을 구해 출력한다.

# 풀이
먼저 1차원 배열의 구간합을 미리 구한다. 그 이후에는 M번 만큼 반복하면서 1차원 배열의 구간합을 x1부터 x2까지 y1부터 y2까지 더한다. 주의할점은 입출력 속도를 향상시키는 코드를 꼭 넣어주어야 한다. 안 그러면 같은 코드여도 시간 초과가 떴다.

# 코드
```c++
#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 1025;

int N, M;

int arr[MAX][MAX] = {};
int tab[MAX][MAX] = {};

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> N >> M;

	for (int i = 1; i <= N; i++)
	{
		for (int j = 1; j <= N; j++)
		{
			cin >> arr[i][j];
			tab[i][j] = arr[i][j];
			tab[i][j] = tab[i][j] + tab[i][j - 1];
		}
	}


	while (M--)
	{
		int x1, y1, x2, y2;

		cin >> x1 >> y1 >> x2 >> y2;

		int sum = 0;

		for (int i = x1; i <= x2; i++)
		{
			sum += tab[i][y2] - tab[i][y1 - 1];
		}

		cout << sum << "\n";
	}
	

	return 0;
}
```