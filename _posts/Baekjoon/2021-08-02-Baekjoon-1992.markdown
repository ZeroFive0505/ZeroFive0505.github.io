---
layout: post
title: 쿼드트리
date: 2021-08-02 14:35:30 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/1992)
# 쿼드트리

# 문제
> 흑백 영상을 압축하여 표현하는 데이터 구조로 쿼드 트리(Quad Tree)라는 방법이 있다. 흰 점을 나타내는 0과 검은 점을 나타내는 1로만 이루어진 영상(2차원 배열)에서 같은 숫자의 점들이 한 곳에 많이 몰려있으면, 쿼드 트리에서는 이를 압축하여 간단히 표현할 수 있다. 주어진 영상이 모두 0으로만 되어 있으면 압축 결과는 "0"이 되고, 모두 1로만 되어 있으면 압축 결과는 "1"이 된다. 만약 0과 1이 섞여 있으면 전체를 한 번에 나타내지를 못하고, 왼쪽 위, 오른쪽 위, 왼쪽 아래, 오른쪽 아래, 이렇게 4개의 영상으로 나누어 압축하게 되며, 이 4개의 영역을 압축한 결과를 차례대로 괄호 안에 묶어서 표현한다 
> ![img](https://www.acmicpc.net/JudgeOnline/upload/201007/qq.png)
> 위 그림에서 왼쪽의 영상은 오른쪽의 배열과 같이 숫자로 주어지며, 이 영상을 쿼드 트리 구조를 이용하여 압축하면 "(0(0011)(0(0111)01)1)"로 표현된다.  N ×N 크기의 영상이 주어질 때, 이 영상을 압축한 결과를 출력하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에는 영상의 크기를 나타내는 숫자 N 이 주어진다. N 은 언제나 2의 제곱수로 주어지며, 1 ≤ N ≤ 64의 범위를 가진다. 두 번째 줄부터는 길이 N의 문자열이 N개 들어온다. 각 문자열은 0 또는 1의 숫자로 이루어져 있으며, 영상의 각 점들을 나타낸다.

# 출력
> 영상을 압축한 결과를 출력한다.

# 풀이
정사각형을 1, 2, 3, 4분면으로 계속 쪼개서 0 또는 1만으로 이뤄지는 경우에는 출력하고 아닐경우에는 괄호를 열고 재귀 호출을 한다. 크기는 계속 2로 나누면서 줄어들 것이고 1사분면의 경우 시작점은 그대로지만 끝나는 지점은 전보다 2로 나눠진 만큼 줄어들 것이고 2사분면의 경우 열의 시작위치는 2로 나눠진만큼 커진다.

# 코드
```c++
#include <iostream>
#include <string>
using namespace std;

const int SIZE = 64;

int arr[SIZE][SIZE];

int N;

void QuadTree(int row, int col, int size)
{
	bool one = true;
	bool zero = true;

	if (size == 1)
	{
		cout << arr[row][col];
		return;
	}

	for (int i = row; i < row + size; i++)
	{
		for (int j = col; j < col + size; j++)
		{
			if (arr[i][j] == 0)
				one = false;

			if (arr[i][j] == 1)
				zero = false;
		}
	}

	if (zero)
	{
		cout << "0";
	}

	else if (one)
	{
		cout << "1";
	}
	else
	{
		cout << "(";
		int mid = size / 2;
		QuadTree(row, col, mid);
		QuadTree(row, col + mid, mid);
		QuadTree(row + mid, col, mid);
		QuadTree(row + mid, col + mid, mid);
		cout << ")";
	}
}

int main()
{
	cin >> N;

	for (int i = 0; i < N; i++)
	{
		string s;
		cin >> s;
		for (int j = 0; j < N; j++)
		{
			arr[i][j] = s[j] - '0';
		}
	}

	QuadTree(0, 0, N);

	return 0;
}
```