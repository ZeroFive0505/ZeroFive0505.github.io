---
layout: post
title: 하노이 탑 이동 순서
date: 2021-08-02 11:14:55 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/11729)
# 하노이 탑 이동 순서

# 문제
> 세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.
> 1. 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
> 2. 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.

> 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.
아래 그림은 원판이 5개인 경우의 예시이다.
![img](https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11729/hanoi.png)

# 입력
> 첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다.

# 출력
> 첫째 줄에 옮긴 횟수 K를 출력한다. 두 번째 줄부터 수행 과정을 출력한다. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.

# 풀이
재귀로 풀 수 있는 하노이 탑 문제 먼저 하노이 탑을 풀 함수를 선언하는데 `void Hanoi(int src, int temp, int dest, int n)` `src`는 시작 막대, `temp`는 두번째 막대 마지막으로 `dest`는 세번째 막대다. 먼저 재귀함수의 기저 조건을 선언한다. `n`이 원판의 갯수이기에 n이 1과 같을때는 src에서 dest로 이동이 가능한 상황이다. 따라서 이를 출력해준다. 아닐 경우는 n개의 원판을 옮길려면 n-1개의 원판을 src에서 dest를 이용해서 temp로 이동시켜 줘야한다. 그리고 만약 n-1개의 원판을 다 옮겼을시에는 src에서 dest로 이동이 가능하다. 마지막으로 temp에 있는 n-1개의 원판을 src를 이용해서 dest로 이동하면 올바르게 하노이 탑의 이동 순서를 출력할 수 있다. 또한 문제에서는 최소 이동 횟수를 출력을 원하는데 이는 간단하게 2^n - 1로 구할 수 있다.

# 코드
```c++
#include <iostream>

using namespace std;

void Hanoi(int src, int temp, int dest, int n)
{
	if (n == 1)
		cout << src << " " << dest << "\n";
	else
	{
		Hanoi(src, dest, temp, n - 1);
		cout << src << " " << dest << "\n";
		Hanoi(temp, src, dest, n - 1);
	}
}

int main()
{

	int n;

	cin >> n;

	cout << (1 << n) - 1 << "\n";
	Hanoi(1, 2, 3, n);

	return 0;
}
```

