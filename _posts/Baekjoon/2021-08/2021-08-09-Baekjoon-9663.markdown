---
layout: post
title: N-Queen
date:  2021-08-09 13:53:37 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/9663)
# N-Queen

# 문제
> N-Queen 문제는 크기가 N × N인 체스판 위에 퀸 N개를 서로 공격할 수 없게 놓는 문제이다. N이 주어졌을 때, 퀸을 놓는 방법의 수를 구하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 N이 주어진다. (1 ≤ N < 15)

# 출력
> 첫째 줄에 퀸 N개를 서로 공격할 수 없게 놓는 경우의 수를 출력한다.

# 풀이
3개의 불 배열이 필요하다. 먼저 행이나 또는 열 기준으로 이 곳에 퀸을 배치했는지와 대각선의 관계식을 표현한 배열이 2개 필요하다 왼쪽 위부터 시작하는 대각선 그리고 왼쪽 아래에서부터 시작하는 대각선 이 3개의 배열이 있으면 매 행 또는 열마다 해당 좌표에 퀸을 놓을 수 있는지 확인하고 놓을 수 있다면 재귀 호출을 하여 N에 도달하면 숫자를 늘려준다.

# 코드
```c++
#include <iostream>

using namespace std;

int N;

const int SIZE = 16;

bool placed[SIZE];
bool diag1[SIZE * 2 - 1];
bool diag2[SIZE * 2 - 1];

int cnt = 0;

void recur(int i)
{
    // 현재 모든 퀸을 배치 했다면
	if (i == N)
	{
		cnt++;
		return;
	}


	for (int j = 0; j < N; j++)
	{   
        // 만약 퀸을 배치할 수 있다면
		if (!placed[j] && !diag1[i + j] && !diag2[(N - 1) - (i - j)])
		{   
            // 배치한다.
			placed[j] = diag1[i + j] = diag2[(N - 1) - (i - j)] = true;
            // 다음 행 또는 열로 넘어간다. 무엇기 기준이되도 상관은 없다.
			recur(i + 1);
			placed[j] = diag1[i + j] = diag2[(N - 1) - (i - j)] = false;
		}
	}
}

int main()
{
	cin >> N;

	recur(0);

	cout << cnt << "\n";

	return 0;
}
```