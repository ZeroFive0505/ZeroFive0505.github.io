---
layout: post
title: 종이의 개수
date: 2021-08-02 15:12:25 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/1780)
# 종이의 개수

# 문제
> N×N크기의 행렬로 표현되는 종이가 있다. 종이의 각 칸에는 -1, 0, 1의 세 값 중 하나가 저장되어 있다. 우리는 이 행렬을 적절한 크기로 자르려고 하는데, 이때 다음의 규칙에 따라 자르려고 한다.
> 1. 만약 종이가 모두 같은 수로 되어 있다면 이 종이를 그대로 사용한다.
> 2. (1)이 아닌 경우에는 종이를 같은 크기의 9개의 종이로 자르고, 각각의 잘린 종이에 대해서 (1)의 과정을 반복한다.

> 이와 같이 종이를 잘랐을 때, -1로만 채워진 종이의 개수, 0으로만 채워진 종이의 개수, 1로만 채워진 종이의 개수를 구해내는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 N(1 ≤ N ≤ 37, N은 3k 꼴)이 주어진다. 다음 N개의 줄에는 N개의 정수로 행렬이 주어진다.

# 출력
> 첫째 줄에 -1로만 채워진 종이의 개수를, 둘째 줄에 0으로만 채워진 종이의 개수를, 셋째 줄에 1로만 채워진 종이의 개수를 출력한다.

# 풀이
쿼드트리의 변형 문제였다. 쿼드 트리의 경우 위, 아래 해서 총 4개의 영역으로 분할되지만 이 경우 위, 중간, 아래로 총 9개로 분할이 된다. 이점을 유의해서 풀면 된다.

# 코드
```c++
#include <iostream>

using namespace std;

const int SIZE = 2188;

int arr[SIZE][SIZE];

int N;

int ONE = 0;
int MINUS = 0;
int ZERO = 0;

void CountPaper(int r, int c, int size)
{
	if (size == 1)
	{
		switch (arr[r][c])
		{
		case 1:
			ONE++;
			break;
		case -1:
			MINUS++;
			break;
		case 0:
			ZERO++;
			break;
		}

		return;
	}


	bool one = true;
	bool minus = true;
	bool zero = true;

	for (int i = r; i < r + size; i++)
	{
		for (int j = c; j < c + size; j++)
		{
			if (arr[i][j] == 1)
			{
				minus = false;
				zero = false;
			}

			if (arr[i][j] == -1)
			{
				one = false;
				zero = false;
			}

			if (arr[i][j] == 0)
			{
				one = false;
				minus = false;
			}
		}
	}

	if (one)
		ONE++;
	else if (minus)
		MINUS++;
	else if (zero)
		ZERO++;
	else
	{
		int mid = size / 3;
		CountPaper(r, c, mid);
		CountPaper(r, c + mid, mid);
		CountPaper(r, c + mid + mid, mid);

		CountPaper(r + mid, c, mid);
		CountPaper(r + mid, c + mid, mid);
		CountPaper(r + mid, c + mid + mid, mid);

		CountPaper(r + mid + mid, c, mid);
		CountPaper(r + mid + mid, c + mid, mid);
		CountPaper(r + mid + mid, c + mid + mid, mid);
	}
}

int main()
{
	cin >> N;

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			cin >> arr[i][j];
		}
	}


	CountPaper(0, 0, N);

	cout << MINUS << "\n";
	cout << ZERO << "\n";
	cout << ONE << "\n";

	return 0;
}
```