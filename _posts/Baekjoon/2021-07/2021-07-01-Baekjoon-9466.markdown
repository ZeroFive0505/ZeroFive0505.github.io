---
layout: post
title: 텀 프로젝트
date: 2021-07-01 11:52:39 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/9466)
# 텀 프로젝트

# 문제
> 이번 가을학기에 '문제 해결' 강의를 신청한 학생들은 텀 프로젝트를 수행해야 한다. 프로젝트 팀원 수에는 제한이 없다. 심지어 모든 학생들이 동일한 팀의 팀원인 경우와 같이 한 팀만 있을 수도 있다. 프로젝트 팀을 구성하기 위해, 모든 학생들은 프로젝트를 함께하고 싶은 학생을 선택해야 한다. (단, 단 한 명만 선택할 수 있다.) 혼자 하고 싶어하는 학생은 자기 자신을 선택하는 것도 가능하다. 학생들이(s1, s2, ..., sr)이라 할 때, r=1이고 s1이 s1을 선택하는 경우나, s1이 s2를 선택하고, s2가 s3를 선택하고,..., sr-1이 sr을 선택하고, sr이 s1을 선택하는 경우에만 한 팀이 될 수 있다. 주어진 선택의 결과를 보고 어느 프로젝트 팀에도 속하지 않는 학생들의 수를 계산하는 프로그램을 작성하라.

# 입력
> 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫 줄에는 학생의 수가 정수 n (2 ≤ n ≤ 100,000)으로 주어진다. 각 테스트 케이스의 둘째 줄에는 선택된 학생들의 번호가 주어진다. (모든 학생들은 1부터 n까지 번호가 부여된다.)

# 출력
> 각 테스트 케이스마다 한 줄에 출력하고, 각 줄에는 프로젝트 팀에 속하지 못한 학생들의 수를 나타내면 된다.

# 코드
```c++
#include <iostream>
#include <vector>

using namespace std;

void DFS(vector<int>& graph, vector<bool>& visited, vector<bool>& done, int v, int& cnt)
{
	visited[v] = true;

	if (!visited[graph[v]])
		DFS(graph, visited, done, graph[v], cnt);
	else if (!done[graph[v]])
	{
		for (int i = graph[v]; i != v; i = graph[i])
			cnt++;
		cnt++;
	}

	done[v] = true;
}

int main()
{

	int T;

	cin >> T;

	while (T--)
	{
		int n;
		cin >> n;
		int answer = 0;
		vector<int> graph(n + 1);

		for (int i = 1; i <= n; i++)
		{
			int v;
			cin >> v;
			graph[i] = v;
		}


		vector<bool> visited(n + 1, false);
		vector<bool> done(n + 1, false);
		for (int i = 1; i <= n; i++)
		{
			if (!visited[i])
				DFS(graph, visited, done, i, answer);
		}

		cout << n - answer << "\n";
	}

	return 0;
}
```

# 풀이
사이클을 찾는 문제였다... 사이클 감지하는 코드가 잘 생각도 안 나서 결국에는 다른 사람들의 풀이를 참고하게 됬다..