---
layout: post
title: 절댓값 힙
date: 2021-06-29 11:05:24 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/11286)
# 절댓값 힙

# 문제
> 절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.
> 1. 배열에 정수 x (x ≠ 0)를 넣는다.

> 2. 배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 

> 절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.

# 입력
> 첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 0이 아니라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 절댓값이 가장 작은 값을 출력하고 그 값을 배열에서 제거하는 경우이다. 입력되는 정수는 -2<sup>31</sup>보다 크고, 2<sup>31</sup> 보다 작다.

# 출력
> 입력에서 0이 주어진 회수만큼 답을 출력한다. 만약 배열이 비어 있는 경우인데 절댓값이 가장 작은 값을 출력하라고 한 경우에는 0을 출력하면 된다.

# 풀이
힙 요소를 페어로 설정해놓고 정렬기준만 잘 설정하면 무난하게 풀 수 있는 문제였다.

# 코드
```C++
#include <iostream>
#include <cmath>
#include <queue>

using namespace std;

struct sItem
{
	int val;
	int absVal;

	bool operator<(const sItem& rhs) const
	{
		if (absVal != rhs.absVal)
			return absVal > rhs.absVal;
		else
			return val > rhs.val;
	}
};


int main()
{
	int N;

	cin >> N;

	priority_queue<sItem> pq;

	for (int i = 0; i < N; i++)
	{
		int x;
		cin >> x;

		if (x != 0)
			pq.push({ x, abs(x) });
		else
		{
			if (!pq.empty())
			{
				cout << pq.top().val << "\n";
				pq.pop();
			}
			else
				cout << 0 << "\n";
		}
	}


	return 0;
}
```