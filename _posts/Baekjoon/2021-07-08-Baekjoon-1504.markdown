---
layout: post
title: 특정한 최단 경로
date: 2021-07-08 11:29:11 +0900
categories: Baekjoon
---

## 문제링크 -> [Baekjoon](https://www.acmicpc.net/problem/1504)
# 특정한 최단 경로

# 문제
> 방향성이 없는 그래프가 주어진다. 세준이는 1번 정점에서 N번 정점으로 최단 거리로 이동하려고 한다. 또한 세준이는 두 가지 조건을 만족하면서 이동하는 특정한 최단 경로를 구하고 싶은데, 그것은 바로 임의로 주어진 두 정점은 반드시 통과해야 한다는 것이다. 세준이는 한번 이동했던 정점은 물론, 한번 이동했던 간선도 다시 이동할 수 있다. 하지만 반드시 최단 경로로 이동해야 한다는 사실에 주의하라. 1번 정점에서 N번 정점으로 이동할 때, 주어진 두 정점을 반드시 거치면서 최단 경로로 이동하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 정점의 개수 N과 간선의 개수 E가 주어진다. (2 ≤ N ≤ 800, 0 ≤ E ≤ 200,000) 둘째 줄부터 E개의 줄에 걸쳐서 세 개의 정수 a, b, c가 주어지는데, a번 정점에서 b번 정점까지 양방향 길이 존재하며, 그 거리가 c라는 뜻이다. (1 ≤ c ≤ 1,000) 다음 줄에는 반드시 거쳐야 하는 두 개의 서로 다른 정점 번호 v1과 v2가 주어진다. (v1 ≠ v2, v1 ≠ N, v2 ≠ 1)

# 출력
> 첫째 줄에 두 개의 정점을 지나는 최단 경로의 길이를 출력한다. 그러한 경로가 없을 때에는 -1을 출력한다.

# 코드
```c++
#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>

using namespace std;

const int MAX = 801;


const int INF = 987654321;

int N, E;

vector<pair<int, int>> graph[MAX];

vector<int> Dijkstra(int src)
{
	vector<int> dist(N + 1, INF);
	dist[src] = 0;

	priority_queue<pair<int, int>> pq;

	pq.push({ 0, src });

	while (!pq.empty())
	{
		pair<int, int> t = pq.top();
		pq.pop();
		int u = t.second;
		int oldDist = -t.first;

		for (int v = 0; v < graph[u].size(); v++)
		{
			int neighbor = graph[u][v].first;
			int newDist = graph[u][v].second;

			if (newDist + oldDist < dist[neighbor])
			{
				dist[neighbor] = oldDist + newDist;
				pq.push({ -dist[neighbor], neighbor });
			}
		}
	}

	return dist;
}

int main()
{
	cin >> N >> E;

	for (int i = 0; i < E; i++)
	{
		int u, v, w;
		cin >> u >> v >> w;

		graph[u].push_back({ v, w });
		graph[v].push_back({ u, w });
	}

	int v1, v2;

	cin >> v1 >> v2;

	vector<int> result = Dijkstra(1);
	vector<int> temp1 = Dijkstra(v1);
	vector<int> temp2 = Dijkstra(v2);

	int answer = min( result[v1] + temp1[v2] + temp2[N], result[v2] + temp2[v1] + temp1[N] );

	if (answer >= INF || answer < 0)
		cout << -1 << "\n";
	else
		cout << answer << "\n";

	return 0;
}
```

# 풀이
처음에는 플로이드로 푸는 문제인줄 알고 한참을 고민했는데 결국 제대로된 정답이 나오지 않아서 인터넷을 참고했다. 다익스트라를 시작점, 경유점 2곳에서 한 이후에 
시작점에서 경유점 1을 거치고 경유점 2에서 N까지의 최단거리와 시작점에서 경유점 2를 거치고 경유점 1을 거치고 N까지의 최단거리에서 최소를 찾으면된다.