---
layout: post
title: 30
date: 2022-09-06 08:40:39 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/10610)
# 30

# 문제
> 어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.
미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.

# 입력
> N을 입력받는다. N는 최대 10<sup>5</sup>개의 숫자로 구성되어 있으며, 0으로 시작하지 않는다.

# 출력
> 미르코가 만들고 싶어하는 수가 존재한다면 그 수를 출력하라. 그 수가 존재하지 않는다면, -1을 출력하라.

# 풀이
처음에는 간단하게 모든 경우의 수를 따져봐서 30으로 나눠진다면 그 중에서 최댓값을 취하게 했는데 N의 범위를 자세하게 살펴보니 이러한 방법으로는 제대로된 정답을 출력하지 못할 것 같았다. 수가 너무 커서 이걸 배열에 다 담아놓고 30으로 나눠지는지를 확인해야하나 싶어서 인터넷을 참조했고 [이 곳](https://jaimemin.tistory.com/727)의 풀이를 참조했다. 간단하게 30으로 나눠진다는 뜻은 3으로나 나눠지고 0을 가지고 있어야 한다. 따라서 반복문으로 모든 수의 합을 더한뒤에 3으로 나눠 떨어지고 0이 있다면 내림차순으로 정렬해서 가장 큰 수를 출력하고 아니라면 -1을 출력한다.

# 코드
```c++
#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int main()
{
	string N;

	cin >> N;

	long long sum = 0;
	bool zero = false;

	for (int i = 0; i < N.size(); i++)
	{
		if ((N[i] - '0') == 0)
			zero = true;

		sum += (N[i] - '0');
	}

	if (sum % 3 != 0 || !zero)
		cout << -1 << "\n";
	else
	{
		sort(N.begin(), N.end(), [](const char& a, const char& b) {
			return a > b;
		});

		cout << N << "\n";
	}

	return 0;
}
```