---
layout: post
title: 이친수
date: 2022-04-28 08:34:00 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/2193)
# 이친수

# 문제
> 0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.
> 1. 이친수는 0으로 시작하지 않는다.
> 2. 이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.

> 예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 1, 2번 규칙에 위배되므로 이친수가 아니다.
N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하는 프로그램을 작성하시오.

# 입력
> 첫째 줄에 N이 주어진다.

# 출력
> 첫째 줄에 N자리 이친수의 개수를 출력한다.

# 풀이
 2xn 타일링 문제와 상당히 흡사한 문제였다 n번째 이친수의 갯수는 n - 1, n - 2번째 이친수의 개수의 합과 같다. 다만 문제에서 나눈 나머지를 구하는 것이 아니여서 상당히 숫자가 커지므로 `long long`으로 선언하지 않으면 틀린결과를 출력하게 되니 주의해야 한다.

 # 코드
 ```c++
#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 91;

long long tab[MAX] = {};

int main()
{
    // 자릿수 하나의 이친수의 갯수
	tab[1] = 1;
    // 자릿수 두개의 이친수의 갯수
	tab[2] = 1;

	int n;

	cin >> n;

	for (int i = 3; i <= n; i++)
	{
		tab[i] = tab[i - 1] + tab[i - 2];
	}

	cout << tab[n] << "\n";

	return 0;
}
 ```