---
layout: post
title: 최소값 찾기
date: 2022-04-19 08:41:08 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/11003)
# 최소값 찾기

# 문제
> N개의 수 A1, A2, ..., AN과 L이 주어진다.
Di = Ai-L+1 ~ Ai 중의 최솟값이라고 할 때, D에 저장된 수를 출력하는 프로그램을 작성하시오. 이때, i ≤ 0 인 Ai는 무시하고 D를 구해야 한다.

# 입력
> 첫째 줄에 N과 L이 주어진다. (1 ≤ L ≤ N ≤ 5,000,000)
둘째 줄에는 N개의 수 Ai가 주어진다. (-10^9 ≤ Ai ≤ 10^9)

# 출력
> 첫째 줄에 Di를 공백으로 구분하여 순서대로 출력한다.

# 풀이
문제자체가 잘 이해가 안되서 [이곳](https://jaimemin.tistory.com/746)을 보고 풀이에 대한 해답을 얻었다. L만큼의 구간에서 최소값을 매순간 출력해야 하는 문제였다.

# 코드
```c++
#include <iostream>
#include <deque>

using namespace std;

const int MAX = 5000000;

int arr[MAX] = {};

deque<pair<int, int>> dq;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int N, L;

	cin >> N >> L;

	for (int i = 0; i < N; i++)
		cin >> arr[i];


	for (int i = 0; i < N; i++)
	{
        // 만약 덱이 비어있지 않고 가장 앞의 원소가 범위를 벗어난다면 제거
		if (!dq.empty() && dq.front().second <= i - L)
			dq.pop_front();

        // 만약 제일 뒷 원소가 현재 배열의 값보다 크다면 제거
		while (!dq.empty() && dq.back().first > arr[i])
			dq.pop_back();

		dq.push_back({ arr[i], i });

        // 덱은 오름차순으로 정렬이 되어있다. 따라서 가장 앞원소를 출력하면 항상 그 구간에서 최소값을 가져올 수 있다.
		cout << dq.front().first << " ";
	}
	
	cout << "\n";

	return 0;
}
```