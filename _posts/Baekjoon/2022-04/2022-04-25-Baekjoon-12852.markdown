---
layout: post
title: 1로 만들기 2
date: 2022-04-25 10:29:38 +0900
categories: Baekjoon
---

## 문제 링크 -> [Baekjoon](https://www.acmicpc.net/problem/12852)
# 1로 만들기 2

# 문제
> 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.
> 1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
> 2. X가 2로 나누어 떨어지면, 2로 나눈다.
> 3. 1을 뺀다.

> 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

# 입력
> 첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 자연수 N이 주어진다.

# 출력
> 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
둘째 줄에는 N을 1로 만드는 방법에 포함되어 있는 수를 공백으로 구분해서 순서대로 출력한다. 정답이 여러 가지인 경우에는 아무거나 출력한다.

# 풀이
1로 만들기에서 경로를 추적하는 배열을 만들어서 그 배열을 따라가면서 값을 출력하도록 하면된다.

# 코드
```c++
#include <iostream>
#include <algorithm>

using namespace std;

int N;

const int MAX = 1000002;

int tab[MAX] = {};
int parent[MAX] = {};

int main()
{
	cin >> N;

	tab[1] = 0;
	parent[1] = 0;

	for (int i = 2; i <= N; i++)
	{
        // 1을 더하는 경우
		tab[i] = tab[i - 1] + 1;
		parent[i] = i - 1;

		if (i % 2 == 0)
		{
            // 만약 2로 나눠떨어지고 횟수가 더 적다면
			if (tab[i] > tab[i / 2] + 1)
			{
                // 새롭게 갱신한다.
				tab[i] = tab[i / 2] + 1;
				parent[i] = i / 2;
			}
		}

		if (i % 3 == 0)
		{
            // 마찬가지
			if (tab[i] > tab[i / 3] + 1)
			{
				tab[i] = tab[i / 3] + 1;
				parent[i] = i / 3;
			}
		}
	}


    // 최소 횟수를 출력한다.
	cout << tab[N] << "\n";

	int cur = N;

    // cur가 1이 될때까지 반복하면서 출력
	while (1)
	{
		cout << cur << " ";
		if (cur == 1)
			break;

		cur = parent[cur];
	}

	return 0;
}
```