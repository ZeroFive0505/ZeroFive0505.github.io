---
layout: post
title: 순위
date: 2021-07-19 07:35:27 +0900
categories: Programmers-Level3
---

# 순위
## 문제 링크 -> [Programmers](https://programmers.co.kr/learn/courses/30/lessons/49191)

# 풀이
먼저 결과 배열을 순회하면서 일방향으로 그래프를 연결한다. 그 이후 플로이드 워셜 알고리즘을 이용해서 그래프들을 전부 다 연결한다. 그 이후 i번 노드에서 j번 노드 또는 j번 노드에서 i번 노드가 연결되어 있다면 갯수를 늘린다. 만약 i번째 노드에 연결된 노드의 수가 자기 자신을 제외한 즉 n - 1의 갯수와 같다면 i번 노드에서 모든 노드까지의 경로가 있다는 뜻이다. 이 말은 순위를 매길 수 있다는 예기가 된다.

# 코드
```c++
#include <iostream>
#include <vector>

using namespace std;

int solution(int n, vector<vector<int>> results) 
{
    int answer = 0;

    vector<vector<bool>> graph(n + 1, vector<bool>(n + 1, false));

    for (int i = 0; i < results.size(); i++)
    {
        int u = results[i][0];
        int v = results[i][1];

        graph[u][v] = true;
    }

    for (int k = 1; k <= n; k++)
    {
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                if (graph[i][k] && graph[k][j])
                    graph[i][j] = true;
            }
        }
    }


    
    int cnt = 0;
    for (int i = 1; i <= n; i++)
    {
        cnt = 0;
        for (int j = 1; j <= n; j++)
        {
            if (graph[i][j] || graph[j][i])
                cnt++;
        }

        if (cnt == n - 1)
            answer++;
    }

    return answer;
}
```