---
layout: post
title: 조이스틱
date: 2021-09-01 09:32:30 +0900
categories: Programmers-Level2
---

# 조이스틱
## 문제 링크 -> [Programmers](https://programmers.co.kr/learn/courses/30/lessons/42860)

# 풀이
인터넷을 참조하여 풀 수 있었다. 먼저 A를 기준으로 잡는다. 그 기준 A로 왼쪽, 오른쪽의 크기를 구하고 이동횟수에 더 할때 더 작은쪽으로 더하는 방법으로 횟수를 누적시킨다. 그리고 마지막으로 조이스틱을 아래로 하는게 더 빠른지 위로 하는게 더 빠른지 구해서 누적시킨다.

# 코드
```c++
#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int solution(string name) 
{
    int answer = 0;

    int shifts = name.size() - 1;

    for (int i = 0; i < name.size(); i++)
    {
        if (name[i] == 'A')
        {
            int lastA = i;
            while (lastA < name.size() && name[lastA] == 'A')
                lastA++;

            int left = lastA == 0 ? 0 : i - 1;
            int right = name.size() - lastA;
            shifts = min(shifts, left + right + min(left, right));
        }
    }

   
    for (int i = 0; i < name.size(); i++)
    {
        shifts += min(name[i] - 'A', 'Z' - name[i] + 1);
    }

    answer = shifts;

    return answer;
}
```